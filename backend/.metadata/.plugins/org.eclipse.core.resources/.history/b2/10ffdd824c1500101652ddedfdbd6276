package com.heaptrace.user.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.heaptrace.user.dto.UserRegisterDto;
import com.heaptrace.user.dto.UserUpdateDto;
import com.heaptrace.user.service.UserService;

import lombok.AllArgsConstructor;

@RestController
@AllArgsConstructor
@RequestMapping("/api/users")
@Validated
@CrossOrigin
public class UserController {
	private UserService userService;
	
	@PostMapping
	public ResponseEntity<?> registerUser(@RequestBody UserRegisterDto userRegisterDto) {
		return ResponseEntity.status(HttpStatus.CREATED)
				.body(userService.registerUser(userRegisterDto));
	}
	
	@GetMapping
	public ResponseEntity<?> listUsers() {
		return ResponseEntity.status(HttpStatus.OK)
				.body(userService.listUsers());
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<?> getSpecificUser(@PathVariable Long id) {
		return ResponseEntity.status(HttpStatus.FOUND)
				.body(userService.getSpecificUser(id));
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<?> updateUserDetails(@PathVariable Long id, @RequestBody UserUpdateDto userUpdateDto) {
		return ResponseEntity.status(HttpStatus.OK)
				.body(userService.updateUserDetails(id, userUpdateDto));
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<?> deleteUser(@PathVariable Long id) {
		return ResponseEntity.status(HttpStatus.GONE)
				.body(userService.deleteUser(id));
	}
	
}
